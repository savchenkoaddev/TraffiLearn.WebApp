@model IEnumerable<QuestionResponse>

<link rel="stylesheet" href="~/css/TopicQuestions.css" />

<div id="questions" class="container py-5 d-flex flex-column align-items-center">
    <div class="text-center mb-4 col-12">
        <h1 style="font-weight:700; font-size: 2.5rem; color: #343a40;">Питання на тему "@ViewBag.TopicTitle"</h1>
    </div>

    @foreach (var question in Model)
    {
        <div class="question-container shadow-sm col-10 col-md-8 col-lg-8 mb-5 text-center" id="question-@question.Id">
            <div class="question-content">
                <div class="d-flex justify-content-end mb-2">
                    <button class="btn delete-btn" style="color: red;" data-id="@question.Id"><i class="bi bi-x-lg"></i></button>

                    <a class="btn" style="color: dodgerblue;"
                       href="/questions/@question.Id/update?returnUrl=@Uri.EscapeDataString(Context.Request.GetEncodedUrl())">
                        <i class="bi bi-pencil-square"></i>
                    </a>

                </div>

                <div class="question-details mb-3" style="font-size: 1.2rem; font-weight: 500;">
                    <p>Білет №@question.TitleDetails.TicketNumber. Питання №@question.TitleDetails.QuestionNumber.</p>
                </div>
                <div class="question-text mb-4" style="font-size: 1.2rem;">
                    <p>@question.Content</p>
                </div>

                @if (question.ImageUri is not null)
                {
                    <img src="@question.ImageUri" alt="Question Image" class="img-fluid mb-3" style="max-width: 95%; height: auto;">
                }

                <div class="answers mt-3">
                    @foreach (var answer in question.Answers)
                    {
                        <button style="font-weight: 500; font-size: 1.1rem;" type="button" class="answer btn btn-outline-dark mt-3" data-correct="@answer.IsCorrect">
                            @answer.Text
                        </button>
                    }
                </div>
                <p class="feedback mt-2" style="display:none; font-weight: bold;"></p>

                <button class="btn btn-secondary mt-3 explanation-btn" type="button" data-bs-toggle="collapse" data-bs-target="#explanation-@question.Id" aria-expanded="false" aria-controls="explanation-@question.Id" disabled>
                    Пояснення
                </button>
                <div class="collapse mt-2" id="explanation-@question.Id">
                    <div class="card card-body">
                        <p>@question.Explanation</p>
                    </div>
                </div>
            </div>
        </div>
    }

    <nav aria-label="Page navigation">
        <ul class="pagination">
            @if (ViewBag.CurrentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("TopicQuestions", new { topicId = ViewBag.TopicId, page = ViewBag.CurrentPage - 1 })">Попередня</a>
                </li>
            }
            @for (int i = 1; i <= ViewBag.TotalPages; i++)
            {
                <li class="page-item @(ViewBag.CurrentPage == i ? "active" : "")">
                    <a class="page-link" href="@Url.Action("TopicQuestions", new { topicId = ViewBag.TopicId, page = i })">@i</a>
                </li>
            }
            @if (ViewBag.CurrentPage < ViewBag.TotalPages)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("TopicQuestions", new { topicId = ViewBag.TopicId, page = ViewBag.CurrentPage + 1 })">Наступна</a>
                </li>
            }
        </ul>
    </nav>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var deleteButtons = document.querySelectorAll(".delete-btn");

        deleteButtons.forEach(function (button) {
            button.addEventListener("click", function () {
                var questionId = this.getAttribute("data-id");

                if (confirm("Are you sure you want to delete this question?")) {
                    fetch(`/questions/${questionId}`, {
                        method: "DELETE"
                    })
                        .then(response => {
                            if (response.ok) {
                                document.getElementById(`question-${questionId}`).remove();
                            } else {
                                alert("Failed to delete the question.");
                            }
                        })
                        .catch(error => {
                            console.error("Error:", error);
                            alert("Failed to delete the question.");
                        });
                }
            });
        });

        var answers = document.querySelectorAll(".answer");

        answers.forEach(function (answer) {
            answer.addEventListener("click", function () {
                var questionContainer = this.closest('.question-container');
                var allAnswers = questionContainer.querySelectorAll('.answer');

                allAnswers.forEach(a => {
                    a.classList.remove('correct', 'incorrect', 'selected');
                });

                this.classList.add('selected');

                var feedback = questionContainer.querySelector('.feedback');
                feedback.style.display = "block";

                var selectedAnswerIsCorrect = this.getAttribute("data-correct") === "True";
                feedback.textContent = selectedAnswerIsCorrect ? "Правильна відповідь!" : "Неправильна відповідь!";
                feedback.style.color = selectedAnswerIsCorrect ? "green" : "red";

                if (selectedAnswerIsCorrect) {
                    allAnswers.forEach(function (ans) {
                        if (ans.getAttribute("data-correct") === "True") {
                            ans.classList.add('correct');
                        }
                    });
                } else {
                    this.classList.add('incorrect');
                }

                var explanationBtn = questionContainer.querySelector('.explanation-btn');
                explanationBtn.disabled = false;
            });
        });
    });
</script>
